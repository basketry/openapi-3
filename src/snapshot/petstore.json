{
  "kind": "Service",
  "basketry": "1.1-rc",
  "sourcePath": "src/snapshot/petstore.oas3.json",
  "title": { "value": "SwaggerPetstoreOpenAPI30" },
  "majorVersion": { "value": 1 },
  "interfaces": [
    {
      "kind": "Interface",
      "name": { "value": "pet" },
      "methods": [
        {
          "kind": "Method",
          "name": { "value": "updatePet" },
          "security": [
            [
              {
                "kind": "OAuth2Scheme",
                "type": { "value": "oauth2" },
                "name": { "value": "petstore_auth" },
                "flows": [
                  {
                    "kind": "OAuth2ImplicitFlow",
                    "type": { "value": "implicit" },
                    "authorizationUrl": {
                      "value": "https://petstore3.swagger.io/oauth/authorize"
                    },
                    "scopes": [
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "write:pets" },
                        "description": {
                          "value": "modify pets in your account"
                        }
                      },
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "read:pets" },
                        "description": { "value": "read your pets" }
                      }
                    ]
                  }
                ]
              }
            ]
          ],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "body" },
              "description": { "value": "Update an existent pet in the store" },
              "typeName": { "value": "Pet" },
              "isPrimitive": false,
              "isArray": false,
              "rules": [{ "kind": "ValidationRule", "id": "required" }]
            }
          ],
          "description": [
            { "value": "Update an existing pet" },
            { "value": "Update an existing pet by Id" }
          ],
          "returnType": {
            "kind": "ReturnType",
            "typeName": { "value": "Pet" },
            "isPrimitive": false,
            "isArray": false,
            "rules": []
          }
        },
        {
          "kind": "Method",
          "name": { "value": "addPet" },
          "security": [
            [
              {
                "kind": "OAuth2Scheme",
                "type": { "value": "oauth2" },
                "name": { "value": "petstore_auth" },
                "flows": [
                  {
                    "kind": "OAuth2ImplicitFlow",
                    "type": { "value": "implicit" },
                    "authorizationUrl": {
                      "value": "https://petstore3.swagger.io/oauth/authorize"
                    },
                    "scopes": [
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "write:pets" },
                        "description": {
                          "value": "modify pets in your account"
                        }
                      },
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "read:pets" },
                        "description": { "value": "read your pets" }
                      }
                    ]
                  }
                ]
              }
            ]
          ],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "body" },
              "description": { "value": "Create a new pet in the store" },
              "typeName": { "value": "Pet" },
              "isPrimitive": false,
              "isArray": false,
              "rules": [{ "kind": "ValidationRule", "id": "required" }]
            }
          ],
          "description": [
            { "value": "Add a new pet to the store" },
            { "value": "Add a new pet to the store" }
          ],
          "returnType": {
            "kind": "ReturnType",
            "typeName": { "value": "Pet" },
            "isPrimitive": false,
            "isArray": false,
            "rules": []
          }
        },
        {
          "kind": "Method",
          "name": { "value": "findPetsByStatus" },
          "security": [
            [
              {
                "kind": "OAuth2Scheme",
                "type": { "value": "oauth2" },
                "name": { "value": "petstore_auth" },
                "flows": [
                  {
                    "kind": "OAuth2ImplicitFlow",
                    "type": { "value": "implicit" },
                    "authorizationUrl": {
                      "value": "https://petstore3.swagger.io/oauth/authorize"
                    },
                    "scopes": [
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "write:pets" },
                        "description": {
                          "value": "modify pets in your account"
                        }
                      },
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "read:pets" },
                        "description": { "value": "read your pets" }
                      }
                    ]
                  }
                ]
              }
            ]
          ],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "status" },
              "description": {
                "value": "Status values that need to be considered for filter"
              },
              "typeName": { "value": "findPetsByStatusStatus" },
              "isPrimitive": false,
              "isArray": false,
              "rules": [
                {
                  "kind": "ValidationRule",
                  "id": "string-enum",
                  "values": [
                    { "value": "available" },
                    { "value": "pending" },
                    { "value": "sold" }
                  ]
                }
              ]
            }
          ],
          "description": [
            { "value": "Finds Pets by status" },
            {
              "value": "Multiple status values can be provided with comma separated strings"
            }
          ],
          "returnType": {
            "kind": "ReturnType",
            "typeName": { "value": "Pet" },
            "isPrimitive": false,
            "isArray": true,
            "rules": []
          }
        },
        {
          "kind": "Method",
          "name": { "value": "findPetsByTags" },
          "security": [
            [
              {
                "kind": "OAuth2Scheme",
                "type": { "value": "oauth2" },
                "name": { "value": "petstore_auth" },
                "flows": [
                  {
                    "kind": "OAuth2ImplicitFlow",
                    "type": { "value": "implicit" },
                    "authorizationUrl": {
                      "value": "https://petstore3.swagger.io/oauth/authorize"
                    },
                    "scopes": [
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "write:pets" },
                        "description": {
                          "value": "modify pets in your account"
                        }
                      },
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "read:pets" },
                        "description": { "value": "read your pets" }
                      }
                    ]
                  }
                ]
              }
            ]
          ],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "tags" },
              "description": { "value": "Tags to filter by" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": true,
              "rules": []
            }
          ],
          "description": [
            { "value": "Finds Pets by tags" },
            {
              "value": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
            }
          ],
          "returnType": {
            "kind": "ReturnType",
            "typeName": { "value": "Pet" },
            "isPrimitive": false,
            "isArray": true,
            "rules": []
          }
        },
        {
          "kind": "Method",
          "name": { "value": "getPetById" },
          "security": [
            [
              {
                "kind": "ApiKeyScheme",
                "type": { "value": "apiKey" },
                "name": { "value": "api_key" },
                "parameter": { "value": "api_key" },
                "in": { "value": "header" }
              }
            ],
            [
              {
                "kind": "OAuth2Scheme",
                "type": { "value": "oauth2" },
                "name": { "value": "petstore_auth" },
                "flows": [
                  {
                    "kind": "OAuth2ImplicitFlow",
                    "type": { "value": "implicit" },
                    "authorizationUrl": {
                      "value": "https://petstore3.swagger.io/oauth/authorize"
                    },
                    "scopes": [
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "write:pets" },
                        "description": {
                          "value": "modify pets in your account"
                        }
                      },
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "read:pets" },
                        "description": { "value": "read your pets" }
                      }
                    ]
                  }
                ]
              }
            ]
          ],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "petId" },
              "description": { "value": "ID of pet to return" },
              "typeName": { "value": "long" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [{ "kind": "ValidationRule", "id": "required" }]
            }
          ],
          "description": [
            { "value": "Find pet by ID" },
            { "value": "Returns a single pet" }
          ],
          "returnType": {
            "kind": "ReturnType",
            "typeName": { "value": "Pet" },
            "isPrimitive": false,
            "isArray": false,
            "rules": []
          }
        },
        {
          "kind": "Method",
          "name": { "value": "updatePetWithForm" },
          "security": [
            [
              {
                "kind": "OAuth2Scheme",
                "type": { "value": "oauth2" },
                "name": { "value": "petstore_auth" },
                "flows": [
                  {
                    "kind": "OAuth2ImplicitFlow",
                    "type": { "value": "implicit" },
                    "authorizationUrl": {
                      "value": "https://petstore3.swagger.io/oauth/authorize"
                    },
                    "scopes": [
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "write:pets" },
                        "description": {
                          "value": "modify pets in your account"
                        }
                      },
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "read:pets" },
                        "description": { "value": "read your pets" }
                      }
                    ]
                  }
                ]
              }
            ]
          ],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "petId" },
              "description": { "value": "ID of pet that needs to be updated" },
              "typeName": { "value": "long" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [{ "kind": "ValidationRule", "id": "required" }]
            },
            {
              "kind": "Parameter",
              "name": { "value": "name" },
              "description": {
                "value": "Name of pet that needs to be updated"
              },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "kind": "Parameter",
              "name": { "value": "status" },
              "description": {
                "value": "Status of pet that needs to be updated"
              },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            }
          ],
          "description": [
            { "value": "Updates a pet in the store with form data" },
            { "value": "" }
          ]
        },
        {
          "kind": "Method",
          "name": { "value": "deletePet" },
          "security": [
            [
              {
                "kind": "OAuth2Scheme",
                "type": { "value": "oauth2" },
                "name": { "value": "petstore_auth" },
                "flows": [
                  {
                    "kind": "OAuth2ImplicitFlow",
                    "type": { "value": "implicit" },
                    "authorizationUrl": {
                      "value": "https://petstore3.swagger.io/oauth/authorize"
                    },
                    "scopes": [
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "write:pets" },
                        "description": {
                          "value": "modify pets in your account"
                        }
                      },
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "read:pets" },
                        "description": { "value": "read your pets" }
                      }
                    ]
                  }
                ]
              }
            ]
          ],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "api_key" },
              "description": { "value": "" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "kind": "Parameter",
              "name": { "value": "petId" },
              "description": { "value": "Pet id to delete" },
              "typeName": { "value": "long" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [{ "kind": "ValidationRule", "id": "required" }]
            }
          ],
          "description": [
            { "value": "Deletes a pet" },
            { "value": "delete a pet" }
          ]
        },
        {
          "kind": "Method",
          "name": { "value": "uploadFile" },
          "security": [
            [
              {
                "kind": "OAuth2Scheme",
                "type": { "value": "oauth2" },
                "name": { "value": "petstore_auth" },
                "flows": [
                  {
                    "kind": "OAuth2ImplicitFlow",
                    "type": { "value": "implicit" },
                    "authorizationUrl": {
                      "value": "https://petstore3.swagger.io/oauth/authorize"
                    },
                    "scopes": [
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "write:pets" },
                        "description": {
                          "value": "modify pets in your account"
                        }
                      },
                      {
                        "kind": "OAuth2Scope",
                        "name": { "value": "read:pets" },
                        "description": { "value": "read your pets" }
                      }
                    ]
                  }
                ]
              }
            ]
          ],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "body" },
              "typeName": { "value": "binary" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [
                {
                  "kind": "ValidationRule",
                  "id": "string-format",
                  "format": { "value": "binary" }
                }
              ]
            },
            {
              "kind": "Parameter",
              "name": { "value": "petId" },
              "description": { "value": "ID of pet to update" },
              "typeName": { "value": "long" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [{ "kind": "ValidationRule", "id": "required" }]
            },
            {
              "kind": "Parameter",
              "name": { "value": "additionalMetadata" },
              "description": { "value": "Additional Metadata" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            }
          ],
          "description": [{ "value": "uploads an image" }, { "value": "" }],
          "returnType": {
            "kind": "ReturnType",
            "typeName": { "value": "ApiResponse" },
            "isPrimitive": false,
            "isArray": false,
            "rules": []
          }
        }
      ],
      "protocols": {
        "http": [
          {
            "kind": "HttpPath",
            "path": { "value": "/pet" },
            "methods": [
              {
                "kind": "HttpMethod",
                "name": { "value": "updatePet" },
                "verb": { "value": "put" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "body" },
                    "in": { "value": "body" }
                  }
                ],
                "successCode": { "value": 200 },
                "requestMediaTypes": [
                  { "value": "application/json" },
                  { "value": "application/xml" },
                  { "value": "application/x-www-form-urlencoded" }
                ],
                "responseMediaTypes": [
                  { "value": "application/json" },
                  { "value": "application/xml" }
                ]
              },
              {
                "kind": "HttpMethod",
                "name": { "value": "addPet" },
                "verb": { "value": "post" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "body" },
                    "in": { "value": "body" }
                  }
                ],
                "successCode": { "value": 200 },
                "requestMediaTypes": [
                  { "value": "application/json" },
                  { "value": "application/xml" },
                  { "value": "application/x-www-form-urlencoded" }
                ],
                "responseMediaTypes": [
                  { "value": "application/json" },
                  { "value": "application/xml" }
                ]
              }
            ]
          },
          {
            "kind": "HttpPath",
            "path": { "value": "/pet/findByStatus" },
            "methods": [
              {
                "kind": "HttpMethod",
                "name": { "value": "findPetsByStatus" },
                "verb": { "value": "get" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "status" },
                    "in": { "value": "query" }
                  }
                ],
                "successCode": { "value": 200 },
                "requestMediaTypes": [],
                "responseMediaTypes": [
                  { "value": "application/json" },
                  { "value": "application/xml" }
                ]
              }
            ]
          },
          {
            "kind": "HttpPath",
            "path": { "value": "/pet/findByTags" },
            "methods": [
              {
                "kind": "HttpMethod",
                "name": { "value": "findPetsByTags" },
                "verb": { "value": "get" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "tags" },
                    "in": { "value": "query" },
                    "array": { "value": "csv" }
                  }
                ],
                "successCode": { "value": 200 },
                "requestMediaTypes": [],
                "responseMediaTypes": [
                  { "value": "application/json" },
                  { "value": "application/xml" }
                ]
              }
            ]
          },
          {
            "kind": "HttpPath",
            "path": { "value": "/pet/{petId}" },
            "methods": [
              {
                "kind": "HttpMethod",
                "name": { "value": "getPetById" },
                "verb": { "value": "get" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "petId" },
                    "in": { "value": "path" }
                  }
                ],
                "successCode": { "value": 200 },
                "requestMediaTypes": [],
                "responseMediaTypes": [
                  { "value": "application/json" },
                  { "value": "application/xml" }
                ]
              },
              {
                "kind": "HttpMethod",
                "name": { "value": "updatePetWithForm" },
                "verb": { "value": "post" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "petId" },
                    "in": { "value": "path" }
                  },
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "name" },
                    "in": { "value": "query" }
                  },
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "status" },
                    "in": { "value": "query" }
                  }
                ],
                "successCode": { "value": 200 },
                "requestMediaTypes": [],
                "responseMediaTypes": []
              },
              {
                "kind": "HttpMethod",
                "name": { "value": "deletePet" },
                "verb": { "value": "delete" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "api_key" },
                    "in": { "value": "header" }
                  },
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "petId" },
                    "in": { "value": "path" }
                  }
                ],
                "successCode": { "value": 200 },
                "requestMediaTypes": [],
                "responseMediaTypes": []
              }
            ]
          },
          {
            "kind": "HttpPath",
            "path": { "value": "/pet/{petId}/uploadImage" },
            "methods": [
              {
                "kind": "HttpMethod",
                "name": { "value": "uploadFile" },
                "verb": { "value": "post" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "body" },
                    "in": { "value": "body" }
                  },
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "petId" },
                    "in": { "value": "path" }
                  },
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "additionalMetadata" },
                    "in": { "value": "query" }
                  }
                ],
                "successCode": { "value": 200 },
                "requestMediaTypes": [{ "value": "application/octet-stream" }],
                "responseMediaTypes": [{ "value": "application/json" }]
              }
            ]
          }
        ]
      }
    },
    {
      "kind": "Interface",
      "name": { "value": "store" },
      "methods": [
        {
          "kind": "Method",
          "name": { "value": "getInventory" },
          "security": [
            [
              {
                "kind": "ApiKeyScheme",
                "type": { "value": "apiKey" },
                "name": { "value": "api_key" },
                "parameter": { "value": "api_key" },
                "in": { "value": "header" }
              }
            ]
          ],
          "parameters": [],
          "description": [
            { "value": "Returns pet inventories by status" },
            { "value": "Returns a map of status codes to quantities" }
          ],
          "returnType": {
            "kind": "ReturnType",
            "typeName": { "value": "getInventoryResponse" },
            "isPrimitive": false,
            "isArray": false,
            "rules": []
          }
        },
        {
          "kind": "Method",
          "name": { "value": "placeOrder" },
          "security": [],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "body" },
              "typeName": { "value": "Order" },
              "isPrimitive": false,
              "isArray": false,
              "rules": []
            }
          ],
          "description": [
            { "value": "Place an order for a pet" },
            { "value": "Place a new order in the store" }
          ],
          "returnType": {
            "kind": "ReturnType",
            "typeName": { "value": "Order" },
            "isPrimitive": false,
            "isArray": false,
            "rules": []
          }
        },
        {
          "kind": "Method",
          "name": { "value": "getOrderById" },
          "security": [],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "orderId" },
              "description": {
                "value": "ID of order that needs to be fetched"
              },
              "typeName": { "value": "long" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [{ "kind": "ValidationRule", "id": "required" }]
            }
          ],
          "description": [
            { "value": "Find purchase order by ID" },
            {
              "value": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions."
            }
          ],
          "returnType": {
            "kind": "ReturnType",
            "typeName": { "value": "Order" },
            "isPrimitive": false,
            "isArray": false,
            "rules": []
          }
        },
        {
          "kind": "Method",
          "name": { "value": "deleteOrder" },
          "security": [],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "orderId" },
              "description": {
                "value": "ID of the order that needs to be deleted"
              },
              "typeName": { "value": "long" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [{ "kind": "ValidationRule", "id": "required" }]
            }
          ],
          "description": [
            { "value": "Delete purchase order by ID" },
            {
              "value": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors"
            }
          ]
        }
      ],
      "protocols": {
        "http": [
          {
            "kind": "HttpPath",
            "path": { "value": "/store/inventory" },
            "methods": [
              {
                "kind": "HttpMethod",
                "name": { "value": "getInventory" },
                "verb": { "value": "get" },
                "parameters": [],
                "successCode": { "value": 200 },
                "requestMediaTypes": [],
                "responseMediaTypes": [{ "value": "application/json" }]
              }
            ]
          },
          {
            "kind": "HttpPath",
            "path": { "value": "/store/order" },
            "methods": [
              {
                "kind": "HttpMethod",
                "name": { "value": "placeOrder" },
                "verb": { "value": "post" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "body" },
                    "in": { "value": "body" }
                  }
                ],
                "successCode": { "value": 200 },
                "requestMediaTypes": [
                  { "value": "application/json" },
                  { "value": "application/xml" },
                  { "value": "application/x-www-form-urlencoded" }
                ],
                "responseMediaTypes": [{ "value": "application/json" }]
              }
            ]
          },
          {
            "kind": "HttpPath",
            "path": { "value": "/store/order/{orderId}" },
            "methods": [
              {
                "kind": "HttpMethod",
                "name": { "value": "getOrderById" },
                "verb": { "value": "get" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "orderId" },
                    "in": { "value": "path" }
                  }
                ],
                "successCode": { "value": 200 },
                "requestMediaTypes": [],
                "responseMediaTypes": [
                  { "value": "application/json" },
                  { "value": "application/xml" }
                ]
              },
              {
                "kind": "HttpMethod",
                "name": { "value": "deleteOrder" },
                "verb": { "value": "delete" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "orderId" },
                    "in": { "value": "path" }
                  }
                ],
                "successCode": { "value": 200 },
                "requestMediaTypes": [],
                "responseMediaTypes": []
              }
            ]
          }
        ]
      }
    },
    {
      "kind": "Interface",
      "name": { "value": "user" },
      "methods": [
        {
          "kind": "Method",
          "name": { "value": "createUser" },
          "security": [],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "body" },
              "description": { "value": "Created user object" },
              "typeName": { "value": "User" },
              "isPrimitive": false,
              "isArray": false,
              "rules": []
            }
          ],
          "description": [
            { "value": "Create user" },
            { "value": "This can only be done by the logged in user." }
          ],
          "returnType": {
            "kind": "ReturnType",
            "typeName": { "value": "User" },
            "isPrimitive": false,
            "isArray": false,
            "rules": []
          }
        },
        {
          "kind": "Method",
          "name": { "value": "createUsersWithListInput" },
          "security": [],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "body" },
              "typeName": { "value": "User" },
              "isPrimitive": false,
              "isArray": true,
              "rules": []
            }
          ],
          "description": [
            { "value": "Creates list of users with given input array" },
            { "value": "Creates list of users with given input array" }
          ]
        },
        {
          "kind": "Method",
          "name": { "value": "loginUser" },
          "security": [],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "username" },
              "description": { "value": "The user name for login" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "kind": "Parameter",
              "name": { "value": "password" },
              "description": {
                "value": "The password for login in clear text"
              },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            }
          ],
          "description": [
            { "value": "Logs user into the system" },
            { "value": "" }
          ],
          "returnType": {
            "kind": "ReturnType",
            "typeName": { "value": "string" },
            "isPrimitive": true,
            "isArray": false,
            "rules": []
          }
        },
        {
          "kind": "Method",
          "name": { "value": "logoutUser" },
          "security": [],
          "parameters": [],
          "description": [
            { "value": "Logs out current logged in user session" },
            { "value": "" }
          ]
        },
        {
          "kind": "Method",
          "name": { "value": "getUserByName" },
          "security": [],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "username" },
              "description": {
                "value": "The name that needs to be fetched. Use user1 for testing. "
              },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [{ "kind": "ValidationRule", "id": "required" }]
            }
          ],
          "description": [
            { "value": "Get user by user name" },
            { "value": "" }
          ],
          "returnType": {
            "kind": "ReturnType",
            "typeName": { "value": "User" },
            "isPrimitive": false,
            "isArray": false,
            "rules": []
          }
        },
        {
          "kind": "Method",
          "name": { "value": "updateUser" },
          "security": [],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "body" },
              "description": {
                "value": "Update an existent user in the store"
              },
              "typeName": { "value": "User" },
              "isPrimitive": false,
              "isArray": false,
              "rules": []
            },
            {
              "kind": "Parameter",
              "name": { "value": "username" },
              "description": { "value": "name that need to be deleted" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [{ "kind": "ValidationRule", "id": "required" }]
            }
          ],
          "description": [
            { "value": "Update user" },
            { "value": "This can only be done by the logged in user." }
          ]
        },
        {
          "kind": "Method",
          "name": { "value": "deleteUser" },
          "security": [],
          "parameters": [
            {
              "kind": "Parameter",
              "name": { "value": "username" },
              "description": { "value": "The name that needs to be deleted" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [{ "kind": "ValidationRule", "id": "required" }]
            }
          ],
          "description": [
            { "value": "Delete user" },
            { "value": "This can only be done by the logged in user." }
          ]
        }
      ],
      "protocols": {
        "http": [
          {
            "kind": "HttpPath",
            "path": { "value": "/user" },
            "methods": [
              {
                "kind": "HttpMethod",
                "name": { "value": "createUser" },
                "verb": { "value": "post" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "body" },
                    "in": { "value": "body" }
                  }
                ],
                "successCode": { "value": 201 },
                "requestMediaTypes": [
                  { "value": "application/json" },
                  { "value": "application/xml" },
                  { "value": "application/x-www-form-urlencoded" }
                ],
                "responseMediaTypes": [
                  { "value": "application/json" },
                  { "value": "application/xml" }
                ]
              }
            ]
          },
          {
            "kind": "HttpPath",
            "path": { "value": "/user/createWithList" },
            "methods": [
              {
                "kind": "HttpMethod",
                "name": { "value": "createUsersWithListInput" },
                "verb": { "value": "post" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "body" },
                    "in": { "value": "body" }
                  }
                ],
                "successCode": { "value": 204 },
                "requestMediaTypes": [{ "value": "application/json" }],
                "responseMediaTypes": []
              }
            ]
          },
          {
            "kind": "HttpPath",
            "path": { "value": "/user/login" },
            "methods": [
              {
                "kind": "HttpMethod",
                "name": { "value": "loginUser" },
                "verb": { "value": "get" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "username" },
                    "in": { "value": "query" }
                  },
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "password" },
                    "in": { "value": "query" }
                  }
                ],
                "successCode": { "value": 200 },
                "requestMediaTypes": [],
                "responseMediaTypes": [
                  { "value": "application/xml" },
                  { "value": "application/json" }
                ]
              }
            ]
          },
          {
            "kind": "HttpPath",
            "path": { "value": "/user/logout" },
            "methods": [
              {
                "kind": "HttpMethod",
                "name": { "value": "logoutUser" },
                "verb": { "value": "get" },
                "parameters": [],
                "successCode": { "value": 204 },
                "requestMediaTypes": [],
                "responseMediaTypes": []
              }
            ]
          },
          {
            "kind": "HttpPath",
            "path": { "value": "/user/{username}" },
            "methods": [
              {
                "kind": "HttpMethod",
                "name": { "value": "getUserByName" },
                "verb": { "value": "get" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "username" },
                    "in": { "value": "path" }
                  }
                ],
                "successCode": { "value": 200 },
                "requestMediaTypes": [],
                "responseMediaTypes": [
                  { "value": "application/json" },
                  { "value": "application/xml" }
                ]
              },
              {
                "kind": "HttpMethod",
                "name": { "value": "updateUser" },
                "verb": { "value": "put" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "body" },
                    "in": { "value": "body" }
                  },
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "username" },
                    "in": { "value": "path" }
                  }
                ],
                "successCode": { "value": 204 },
                "requestMediaTypes": [
                  { "value": "application/json" },
                  { "value": "application/xml" },
                  { "value": "application/x-www-form-urlencoded" }
                ],
                "responseMediaTypes": []
              },
              {
                "kind": "HttpMethod",
                "name": { "value": "deleteUser" },
                "verb": { "value": "delete" },
                "parameters": [
                  {
                    "kind": "HttpParameter",
                    "name": { "value": "username" },
                    "in": { "value": "path" }
                  }
                ],
                "successCode": { "value": 200 },
                "requestMediaTypes": [],
                "responseMediaTypes": []
              }
            ]
          }
        ]
      }
    }
  ],
  "types": [
    {
      "kind": "Type",
      "name": { "value": "Order" },
      "properties": [
        {
          "kind": "Property",
          "name": { "value": "id" },
          "typeName": { "value": "long" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "petId" },
          "typeName": { "value": "long" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "quantity" },
          "typeName": { "value": "integer" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "shipDate" },
          "typeName": { "value": "date-time" },
          "isPrimitive": true,
          "isArray": false,
          "rules": [
            {
              "kind": "ValidationRule",
              "id": "string-format",
              "format": { "value": "date-time" }
            }
          ]
        },
        {
          "kind": "Property",
          "name": { "value": "status" },
          "description": { "value": "Order Status" },
          "typeName": { "value": "orderStatus" },
          "isPrimitive": false,
          "isArray": false,
          "rules": [
            {
              "kind": "ValidationRule",
              "id": "string-enum",
              "values": [
                { "value": "placed" },
                { "value": "approved" },
                { "value": "delivered" }
              ]
            }
          ]
        },
        {
          "kind": "Property",
          "name": { "value": "complete" },
          "typeName": { "value": "boolean" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        }
      ],
      "rules": []
    },
    {
      "kind": "Type",
      "name": { "value": "Customer" },
      "properties": [
        {
          "kind": "Property",
          "name": { "value": "id" },
          "typeName": { "value": "long" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "username" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "address" },
          "typeName": { "value": "Address" },
          "isPrimitive": false,
          "isArray": true,
          "rules": []
        }
      ],
      "rules": []
    },
    {
      "kind": "Type",
      "name": { "value": "Address" },
      "properties": [
        {
          "kind": "Property",
          "name": { "value": "street" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "city" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "state" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "zip" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        }
      ],
      "rules": []
    },
    {
      "kind": "Type",
      "name": { "value": "Category" },
      "properties": [
        {
          "kind": "Property",
          "name": { "value": "id" },
          "typeName": { "value": "long" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "name" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        }
      ],
      "rules": []
    },
    {
      "kind": "Type",
      "name": { "value": "User" },
      "properties": [
        {
          "kind": "Property",
          "name": { "value": "id" },
          "typeName": { "value": "long" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "username" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "firstName" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "lastName" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "email" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "password" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "phone" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "userStatus" },
          "description": { "value": "User Status" },
          "typeName": { "value": "integer" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        }
      ],
      "rules": []
    },
    {
      "kind": "Type",
      "name": { "value": "Tag" },
      "properties": [
        {
          "kind": "Property",
          "name": { "value": "id" },
          "typeName": { "value": "long" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "name" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        }
      ],
      "rules": []
    },
    {
      "kind": "Type",
      "name": { "value": "Pet" },
      "properties": [
        {
          "kind": "Property",
          "name": { "value": "id" },
          "typeName": { "value": "long" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "name" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": [{ "kind": "ValidationRule", "id": "required" }]
        },
        {
          "kind": "Property",
          "name": { "value": "category" },
          "typeName": { "value": "Category" },
          "isPrimitive": false,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "photoUrls" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": true,
          "rules": [{ "kind": "ValidationRule", "id": "required" }]
        },
        {
          "kind": "Property",
          "name": { "value": "tags" },
          "typeName": { "value": "Tag" },
          "isPrimitive": false,
          "isArray": true,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "status" },
          "description": { "value": "pet status in the store" },
          "typeName": { "value": "petStatus" },
          "isPrimitive": false,
          "isArray": false,
          "rules": [
            {
              "kind": "ValidationRule",
              "id": "string-enum",
              "values": [
                { "value": "available" },
                { "value": "pending" },
                { "value": "sold" }
              ]
            }
          ]
        }
      ],
      "rules": []
    },
    {
      "kind": "Type",
      "name": { "value": "ApiResponse" },
      "properties": [
        {
          "kind": "Property",
          "name": { "value": "code" },
          "typeName": { "value": "integer" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "type" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "kind": "Property",
          "name": { "value": "message" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        }
      ],
      "rules": []
    },
    {
      "kind": "Type",
      "name": { "value": "getInventoryResponse" },
      "properties": [],
      "rules": []
    }
  ],
  "enums": [
    {
      "kind": "Enum",
      "name": { "value": "findPetsByStatusStatus" },
      "values": [
        { "kind": "EnumValue", "content": { "value": "available" } },
        { "kind": "EnumValue", "content": { "value": "pending" } },
        { "kind": "EnumValue", "content": { "value": "sold" } }
      ]
    },
    {
      "kind": "Enum",
      "name": { "value": "orderStatus" },
      "values": [
        { "kind": "EnumValue", "content": { "value": "placed" } },
        { "kind": "EnumValue", "content": { "value": "approved" } },
        { "kind": "EnumValue", "content": { "value": "delivered" } }
      ]
    },
    {
      "kind": "Enum",
      "name": { "value": "petStatus" },
      "values": [
        { "kind": "EnumValue", "content": { "value": "available" } },
        { "kind": "EnumValue", "content": { "value": "pending" } },
        { "kind": "EnumValue", "content": { "value": "sold" } }
      ]
    }
  ],
  "unions": []
}
